basePath: /
definitions:
  abstraction.PaginationInfo:
    properties:
      count:
        type: integer
      more_records:
        type: boolean
      page:
        type: integer
      page_size:
        type: integer
      total_page:
        type: integer
    type: object
  dto.AuthLoginResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        type: string
      role_id:
        description: fk
        type: string
      token:
        type: string
    type: object
  dto.AuthLoginResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.AuthLoginResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.BrandResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      supplier:
        $ref: '#/definitions/entity.UserModel'
      supplier_id:
        description: fk
        type: string
      variants:
        description: relations
        items:
          $ref: '#/definitions/entity.VariantModel'
        type: array
    type: object
  dto.BrandResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.BrandResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ConvertCurrencyRequest:
    properties:
      usd:
        type: integer
    type: object
  dto.ConvertCurrencyResponse:
    properties:
      idr:
        type: integer
    type: object
  dto.ConvertCurrencyResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ConvertCurrencyResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ConvertionStocDestinationRequest:
    properties:
      packet_id:
        type: string
      total:
        minimum: 1
        type: integer
    required:
    - packet_id
    - total
    type: object
  dto.ConvertionStocOriginkRequest:
    properties:
      product_id:
        type: string
      rack_id:
        type: string
      stock_lookup_ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - product_id
    - rack_id
    - stock_lookup_ids
    type: object
  dto.ConvertionStockRequest:
    properties:
      destination:
        $ref: '#/definitions/dto.ConvertionStocDestinationRequest'
      origin:
        $ref: '#/definitions/dto.ConvertionStocOriginkRequest'
    required:
    - destination
    - origin
    type: object
  dto.ConvertionUnitResponse:
    properties:
      Destination:
        type: string
      id:
        type: string
      origin:
        type: string
      total:
        type: number
    type: object
  dto.ConvertionUnitResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ConvertionUnitResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.CreateBrandRequest:
    properties:
      name:
        type: string
      supplier_id:
        type: string
    required:
    - name
    type: object
  dto.CreateConvertionUnitRequest:
    properties:
      destination:
        type: string
      origin:
        type: string
      total:
        type: number
    required:
    - destination
    - origin
    - total
    type: object
  dto.CreateCurrencyRequest:
    properties:
      is_auto:
        type: boolean
      name:
        type: string
      value:
        type: number
    required:
    - name
    type: object
  dto.CreatePacketRequest:
    properties:
      unit_id:
        type: string
      value:
        type: integer
    required:
    - unit_id
    - value
    type: object
  dto.CreateProductRequest:
    properties:
      brand_id:
        type: string
      name:
        type: string
      packet_id:
        type: string
      price_final:
        type: number
      price_usd:
        type: number
      variant_id:
        type: string
    required:
    - brand_id
    - packet_id
    - variant_id
    type: object
  dto.CreateRackRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.CreateReminderStockRequest:
    properties:
      min_stock:
        type: integer
      name:
        type: string
    type: object
  dto.CreateRoleRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.CreateStockLookupRequest:
    properties:
      is_seal:
        type: boolean
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        type: string
      value:
        type: number
    required:
    - stock_rack_id
    type: object
  dto.CreateUnitRequest:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  dto.CreateUserRequest:
    properties:
      email:
        example: user@gmail.com
        type: string
      name:
        example: user
        type: string
      password:
        type: string
      phone_number:
        type: string
      role_id:
        example: "1"
        type: string
      role_name:
        type: string
    required:
    - name
    type: object
  dto.CreateVariantRequest:
    properties:
      brand_id:
        type: string
      itl:
        type: string
      name:
        type: string
      unique_code:
        type: string
    required:
    - brand_id
    - name
    type: object
  dto.CurrencyResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_auto:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      value:
        type: number
    type: object
  dto.CurrencyResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.CurrencyResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.DashboardOrderDailyResponse:
    properties:
      day:
        type: string
      total:
        type: integer
    type: object
  dto.DashboardResponse:
    properties:
      order_daily:
        items:
          $ref: '#/definitions/dto.DashboardOrderDailyResponse'
        type: array
      total_brand:
        type: integer
      total_order:
        type: integer
      total_product:
        type: integer
      total_stock:
        type: integer
    type: object
  dto.DashboardResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.DashboardResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.LoginAuthRequest:
    properties:
      email:
        example: admin@gmail.com
        type: string
      password:
        example: admin
        type: string
    required:
    - email
    - password
    type: object
  dto.MovementDestinationRequest:
    properties:
      rack_id:
        type: string
    required:
    - rack_id
    type: object
  dto.MovementOriginRequest:
    properties:
      product_id:
        type: string
      rack_id:
        type: string
      stock_lookup_ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - product_id
    - rack_id
    - stock_lookup_ids
    type: object
  dto.MovementStockRequest:
    properties:
      destination:
        $ref: '#/definitions/dto.MovementDestinationRequest'
      origin:
        $ref: '#/definitions/dto.MovementOriginRequest'
    required:
    - destination
    - origin
    type: object
  dto.OrderProductReportResponse:
    properties:
      orders:
        items:
          $ref: '#/definitions/entity.OrderViewProduct'
        type: array
      total:
        type: integer
    type: object
  dto.OrderProductReportResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.OrderProductReportResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.OrderReportResponse:
    properties:
      orders:
        items:
          $ref: '#/definitions/entity.OrderView'
        type: array
      total_income:
        type: integer
      total_order:
        type: integer
    type: object
  dto.OrderReportResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.OrderReportResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.OrderUpsertResponse:
    properties:
      status:
        type: string
    type: object
  dto.OrderUpsertResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.OrderUpsertResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.OrderViewDetailResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: string
      customer_name:
        description: join
        type: string
      customer_phone:
        type: string
      final_price:
        type: number
      id:
        type: string
      is_read:
        type: boolean
      items:
        items:
          $ref: '#/definitions/entity.OrderTrxItemModel'
        type: array
      modified_at:
        type: string
      modified_by:
        type: string
      notes:
        type: string
      payment_status:
        type: string
      pic_id:
        description: fk
        type: string
      pic_name:
        type: string
      price:
        type: number
      receipts:
        items:
          $ref: '#/definitions/entity.OrderTrxReceiptModel'
        type: array
      shipment_number:
        type: string
      shipment_price:
        type: integer
      shipment_type:
        type: string
      status:
        type: string
      stock_status:
        type: string
      supplier_id:
        type: string
      supplier_name:
        type: string
      trx_type:
        type: string
    type: object
  dto.OrderViewResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/entity.OrderView'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.PacketResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      unit:
        allOf:
        - $ref: '#/definitions/entity.UnitModel'
        description: relations
      unit_id:
        description: fk
        type: string
      value:
        type: integer
    type: object
  dto.PacketResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.PacketResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ProductResponse:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/entity.BrandModel'
        description: relations
      brand_id:
        description: fk
        type: string
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      packet:
        $ref: '#/definitions/entity.PacketModel'
      packet_id:
        type: string
      price_final:
        type: number
      price_usd:
        type: number
      stock:
        $ref: '#/definitions/entity.StockModel'
      variant:
        $ref: '#/definitions/entity.VariantModel'
      variant_id:
        type: string
    type: object
  dto.ProductResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ProductResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.RackResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      stock_racks:
        items:
          $ref: '#/definitions/entity.StockRackModel'
        type: array
    type: object
  dto.RackResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.RackResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.RegisterAuthRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
      role_id:
        description: fk
        type: string
    type: object
  dto.ReminderStockHistoryBulkReadResponse:
    properties:
      status:
        type: string
    type: object
  dto.ReminderStockHistoryBulkReadResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ReminderStockHistoryBulkReadResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ReminderStockHistoryCountUnreadResponse:
    properties:
      count:
        type: integer
    type: object
  dto.ReminderStockHistoryCountUnreadResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ReminderStockHistoryCountUnreadResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ReminderStockHistoryResponse:
    properties:
      body:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_read:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      title:
        type: string
    type: object
  dto.ReminderStockHistoryResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ReminderStockHistoryResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.ReminderStockResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      min_stock:
        type: integer
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      reminder_type:
        type: string
    type: object
  dto.ReminderStockResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.ReminderStockResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.RoleResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
    type: object
  dto.RoleResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.RoleResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockConvertionProductResponse:
    properties:
      id:
        type: string
      lookup_codes:
        items:
          type: string
        type: array
    type: object
  dto.StockConvertionResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/dto.StockConvertionProductResponse'
        type: array
      status:
        type: string
    type: object
  dto.StockConvertionResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockConvertionResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockLookupResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_seal:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        description: fk
        type: string
      value:
        type: number
    type: object
  dto.StockLookupResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockLookupResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockLookupViewResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_seal:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      product_id:
        description: join
        type: string
      rack_id:
        type: string
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        description: fk
        type: string
      value:
        type: number
    type: object
  dto.StockLookupViewResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockLookupViewResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockMovementResponse:
    properties:
      status:
        type: string
    type: object
  dto.StockMovementResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockMovementResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockResponse:
    properties:
      brand:
        $ref: '#/definitions/entity.BrandModel'
      brand_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      packet:
        $ref: '#/definitions/entity.PacketModel'
      packet_id:
        type: string
      price_final:
        type: integer
      price_usd:
        type: integer
      product:
        allOf:
        - $ref: '#/definitions/entity.ProductModel'
        description: relations
      product_id:
        description: fk
        type: string
      stock_racks:
        items:
          $ref: '#/definitions/entity.StockRackModel'
        type: array
      total:
        type: integer
      variant:
        $ref: '#/definitions/entity.VariantModel'
      variant_id:
        type: string
    type: object
  dto.StockResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.StockTransactionProductResponse:
    properties:
      id:
        type: string
      lookup_codes:
        items:
          type: string
        type: array
    type: object
  dto.StockTransactionResponse:
    properties:
      products:
        items:
          $ref: '#/definitions/dto.StockTransactionProductResponse'
        type: array
      status:
        type: string
    type: object
  dto.StockTransactionResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.StockTransactionResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.TransactionStockProductRequest:
    properties:
      id:
        type: string
      quantity:
        minimum: 1
        type: integer
      rack_id:
        type: string
      stock_lookup_ids:
        description: only for type out
        items:
          type: string
        type: array
      stock_trx_item_lookup_ids:
        description: only for type in, optional
        items:
          type: string
        type: array
    required:
    - id
    - quantity
    - rack_id
    type: object
  dto.TransactionStockRequest:
    properties:
      order_trx_id:
        type: string
      products:
        items:
          $ref: '#/definitions/dto.TransactionStockProductRequest'
        minItems: 1
        type: array
      trx_type:
        enum:
        - in
        - out
        type: string
    required:
    - products
    - trx_type
    type: object
  dto.UnitResponse:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
    type: object
  dto.UnitResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.UnitResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.UpdateBrandRequest:
    properties:
      id:
        type: string
      name:
        type: string
      supplier_id:
        type: string
    required:
    - id
    type: object
  dto.UpdateConvertionUnitRequest:
    properties:
      destination:
        type: string
      id:
        type: string
      origin:
        type: string
      total:
        type: number
    required:
    - id
    type: object
  dto.UpdateCurrencyRequest:
    properties:
      id:
        type: string
      is_auto:
        type: boolean
      name:
        type: string
      value:
        type: number
    required:
    - id
    type: object
  dto.UpdatePacketRequest:
    properties:
      id:
        type: string
      unit_id:
        type: string
      value:
        type: integer
    required:
    - id
    type: object
  dto.UpdateProductRequest:
    properties:
      id:
        type: string
      name:
        type: string
      price_final:
        type: number
      price_usd:
        type: number
    required:
    - id
    type: object
  dto.UpdateRackRequest:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    type: object
  dto.UpdateReminderStockHistoryBulkReadRequest:
    properties:
      ids:
        items:
          type: string
        type: array
    required:
    - ids
    type: object
  dto.UpdateReminderStockHistoryRequest:
    properties:
      id:
        type: string
      is_read:
        type: boolean
    required:
    - id
    type: object
  dto.UpdateReminderStockRequest:
    properties:
      id:
        type: string
      min_stock:
        type: integer
      name:
        type: string
    required:
    - id
    type: object
  dto.UpdateRoleRequest:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    type: object
  dto.UpdateStockLookupRequest:
    properties:
      id:
        type: string
      is_seal:
        type: boolean
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      value:
        type: number
    required:
    - id
    type: object
  dto.UpdateUnitRequest:
    properties:
      id:
        type: string
      name:
        type: string
    required:
    - id
    type: object
  dto.UpdateUserRequest:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - id
    type: object
  dto.UpdateVariantRequest:
    properties:
      id:
        type: string
      itl:
        type: string
      name:
        type: string
      unique_code:
        type: string
    required:
    - id
    type: object
  dto.UpsertOrderItemLookupRequest:
    properties:
      action:
        enum:
        - insert
        - update
        - delete
        type: string
      id:
        type: string
    required:
    - action
    - id
    type: object
  dto.UpsertOrderItemRequest:
    properties:
      action:
        enum:
        - insert
        - update
        - delete
        type: string
      id:
        type: string
      price:
        type: number
      product_id:
        type: string
      rack_id:
        type: string
      status:
        enum:
        - PENDING
        - PROGRESS
        - COMPLETED
        type: string
      stock_lookups:
        items:
          $ref: '#/definitions/dto.UpsertOrderItemLookupRequest'
        type: array
      total:
        minimum: 1
        type: integer
    required:
    - action
    - price
    - product_id
    - status
    - total
    type: object
  dto.UpsertOrderReceiptRequest:
    properties:
      action:
        enum:
        - insert
        - update
        - delete
        type: string
      id:
        type: string
      receipt_url:
        type: string
    required:
    - action
    - receipt_url
    type: object
  dto.UpsertOrderRequest:
    properties:
      customer_id:
        type: string
      final_price:
        type: number
      id:
        type: string
      is_read:
        type: boolean
      items:
        items:
          $ref: '#/definitions/dto.UpsertOrderItemRequest'
        type: array
      notes:
        type: string
      payment_status:
        enum:
        - UNPAID
        - DP
        - PAID
        type: string
      pic_id:
        type: string
      price:
        type: number
      receipts:
        items:
          $ref: '#/definitions/dto.UpsertOrderReceiptRequest'
        type: array
      shipment_number:
        type: string
      shipment_price:
        type: integer
      shipment_type:
        type: string
      status:
        enum:
        - PENDING
        - PROGRESS
        - COMPLETED
        - CANCELED
        type: string
      stock_status:
        enum:
        - NORMAL
        - ABNORMAL
        type: string
      supplier_id:
        type: string
      trx_type:
        enum:
        - in
        - out
        type: string
    required:
    - final_price
    - items
    - payment_status
    - pic_id
    - price
    - status
    - stock_status
    - trx_type
    type: object
  dto.UserResponse:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/entity.RoleModel'
      role_id:
        description: fk
        type: string
      user_profile:
        $ref: '#/definitions/entity.UserProfileModel'
    type: object
  dto.UserResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.UserResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  dto.VariantResponse:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/entity.BrandModel'
        description: relations
      brand_id:
        description: fk
        type: string
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      itl:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      unique_code:
        type: string
    type: object
  dto.VariantResponseDoc:
    properties:
      body:
        properties:
          data:
            $ref: '#/definitions/dto.VariantResponse'
          meta:
            $ref: '#/definitions/response.Meta'
        type: object
    type: object
  entity.BrandModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      supplier:
        $ref: '#/definitions/entity.UserModel'
      supplier_id:
        description: fk
        type: string
      variants:
        description: relations
        items:
          $ref: '#/definitions/entity.VariantModel'
        type: array
    type: object
  entity.OrderTrxItemLookupModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_seal:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      order_trx_item_id:
        description: fk
        type: string
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        description: fk
        type: string
      value:
        type: number
    type: object
  entity.OrderTrxItemModel:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      order_trx:
        $ref: '#/definitions/entity.OrderTrxModel'
      order_trx_id:
        description: fk
        type: string
      order_trx_item_lookups:
        description: relations
        items:
          $ref: '#/definitions/entity.OrderTrxItemLookupModel'
        type: array
      price:
        type: number
      product:
        $ref: '#/definitions/entity.ProductModel'
      product_id:
        type: string
      rack:
        $ref: '#/definitions/entity.RackModel'
      rack_id:
        type: string
      status:
        type: string
      total:
        type: integer
      total_packed:
        type: integer
    type: object
  entity.OrderTrxModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: string
      final_price:
        type: number
      id:
        type: string
      is_read:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      notes:
        type: string
      payment_status:
        type: string
      pic_id:
        description: fk
        type: string
      price:
        type: number
      shipment_number:
        type: string
      shipment_price:
        type: integer
      shipment_type:
        type: string
      status:
        type: string
      stock_status:
        type: string
      supplier_id:
        type: string
      trx_type:
        type: string
    type: object
  entity.OrderTrxReceiptModel:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      order_trx_id:
        description: fk
        type: string
      receipt_url:
        type: string
    type: object
  entity.OrderView:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_id:
        type: string
      customer_name:
        description: join
        type: string
      customer_phone:
        type: string
      final_price:
        type: number
      id:
        type: string
      is_read:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      notes:
        type: string
      payment_status:
        type: string
      pic_id:
        description: fk
        type: string
      pic_name:
        type: string
      price:
        type: number
      shipment_number:
        type: string
      shipment_price:
        type: integer
      shipment_type:
        type: string
      status:
        type: string
      stock_status:
        type: string
      supplier_id:
        type: string
      supplier_name:
        type: string
      trx_type:
        type: string
    type: object
  entity.OrderViewProduct:
    properties:
      brand_id:
        type: string
      brand_name:
        type: string
      count:
        type: number
      packet_id:
        type: string
      packet_name:
        type: string
      variant_id:
        type: string
      variant_name:
        type: string
    type: object
  entity.PacketModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      unit:
        allOf:
        - $ref: '#/definitions/entity.UnitModel'
        description: relations
      unit_id:
        description: fk
        type: string
      value:
        type: integer
    type: object
  entity.ProductModel:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/entity.BrandModel'
        description: relations
      brand_id:
        description: fk
        type: string
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      packet:
        $ref: '#/definitions/entity.PacketModel'
      packet_id:
        type: string
      price_final:
        type: number
      price_usd:
        type: number
      stock:
        $ref: '#/definitions/entity.StockModel'
      variant:
        $ref: '#/definitions/entity.VariantModel'
      variant_id:
        type: string
    type: object
  entity.RackModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      stock_racks:
        items:
          $ref: '#/definitions/entity.StockRackModel'
        type: array
    type: object
  entity.RoleModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
    type: object
  entity.StockLookupModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_seal:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        description: fk
        type: string
      value:
        type: number
    type: object
  entity.StockModel:
    properties:
      brand:
        $ref: '#/definitions/entity.BrandModel'
      brand_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      packet:
        $ref: '#/definitions/entity.PacketModel'
      packet_id:
        type: string
      price_final:
        type: integer
      price_usd:
        type: integer
      product:
        allOf:
        - $ref: '#/definitions/entity.ProductModel'
        description: relations
      product_id:
        description: fk
        type: string
      stock_racks:
        items:
          $ref: '#/definitions/entity.StockRackModel'
        type: array
      total:
        type: integer
      variant:
        $ref: '#/definitions/entity.VariantModel'
      variant_id:
        type: string
    type: object
  entity.StockRackModel:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      price_final:
        type: integer
      price_usd:
        type: integer
      rack:
        allOf:
        - $ref: '#/definitions/entity.RackModel'
        description: relations
      rack_id:
        type: string
      stock_id:
        description: fk
        type: string
      stock_lookups:
        items:
          $ref: '#/definitions/entity.StockLookupModel'
        type: array
      total:
        type: integer
    type: object
  entity.StockTrxItemLookupModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_seal:
        type: boolean
      modified_at:
        type: string
      modified_by:
        type: string
      remaining_value:
        type: number
      remaining_value_before:
        type: number
      stock_rack_id:
        description: fk
        type: string
      stock_trx_item_id:
        description: fk
        type: string
      value:
        type: number
    type: object
  entity.StockTrxItemModel:
    properties:
      convert_type:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      product_id:
        type: string
      stock_id:
        type: string
      stock_trx_id:
        description: fk
        type: string
      stock_trx_item_lookups:
        description: relations
        items:
          $ref: '#/definitions/entity.StockTrxItemLookupModel'
        type: array
      total_not_seal:
        type: integer
      total_seal:
        type: integer
    type: object
  entity.UnitModel:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
    type: object
  entity.UserModel:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      password:
        type: string
      role_id:
        description: fk
        type: string
    type: object
  entity.UserProfileModel:
    properties:
      address:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      phone:
        type: string
      user_id:
        description: fk
        type: string
    type: object
  entity.VariantModel:
    properties:
      brand:
        allOf:
        - $ref: '#/definitions/entity.BrandModel'
        description: relations
      brand_id:
        description: fk
        type: string
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      itl:
        type: string
      modified_at:
        type: string
      modified_by:
        type: string
      name:
        type: string
      unique_code:
        type: string
    type: object
  response.Meta:
    properties:
      code:
        type: string
      info:
        $ref: '#/definitions/abstraction.PaginationInfo'
      message:
        default: "true"
        type: string
      success:
        default: true
        type: boolean
    type: object
  response.errorResponse:
    properties:
      error:
        type: string
      meta:
        $ref: '#/definitions/response.Meta'
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a doc for stoqu-be.
  title: stoqu-be
  version: 0.0.1
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthLoginResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      summary: Login user
      tags:
      - auth
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterAuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AuthLoginResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Register user
      tags:
      - auth
  /api/brands:
    get:
      consumes:
      - application/json
      description: Get brand
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      - description: fk
        in: query
        name: supplier_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrandResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get brand
      tags:
      - brand
    post:
      consumes:
      - application/json
      description: Create brand
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBrandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrandResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create brand
      tags:
      - brand
  /api/brands/{id}:
    delete:
      consumes:
      - application/json
      description: Delete brand
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrandResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete brand
      tags:
      - brand
    get:
      consumes:
      - application/json
      description: Get brand by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrandResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get brand by id
      tags:
      - brand
    put:
      consumes:
      - application/json
      description: Update brand
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateBrandRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BrandResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update brand
      tags:
      - brand
  /api/convertion-units:
    get:
      consumes:
      - application/json
      description: Get convertionUnit
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: unit_destination_id
        type: string
      - description: fk
        in: query
        name: unit_origin_id
        type: string
      - in: query
        name: value_convertion
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertionUnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get convertionUnit
      tags:
      - convertionUnit
    post:
      consumes:
      - application/json
      description: Create convertionUnit
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateConvertionUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertionUnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create convertionUnit
      tags:
      - convertionUnit
  /api/convertion-units/{id}:
    delete:
      consumes:
      - application/json
      description: Delete convertionUnit
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertionUnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete convertionUnit
      tags:
      - convertionUnit
    get:
      consumes:
      - application/json
      description: Get convertionUnit by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertionUnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get convertionUnit by id
      tags:
      - convertionUnit
    put:
      consumes:
      - application/json
      description: Update convertionUnit
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateConvertionUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertionUnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update convertionUnit
      tags:
      - convertionUnit
  /api/currencies:
    get:
      consumes:
      - application/json
      description: Get currency
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: is_auto
        type: boolean
      - in: query
        name: name
        type: string
      - in: query
        name: value
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get currency
      tags:
      - currency
    post:
      consumes:
      - application/json
      description: Create currency
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create currency
      tags:
      - currency
  /api/currencies/{id}:
    delete:
      consumes:
      - application/json
      description: Delete currency
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete currency
      tags:
      - currency
    get:
      consumes:
      - application/json
      description: Get currency by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get currency by id
      tags:
      - currency
    put:
      consumes:
      - application/json
      description: Update currency
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update currency
      tags:
      - currency
  /api/currencies/convert:
    post:
      consumes:
      - application/json
      description: Convert currency
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ConvertCurrencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ConvertCurrencyResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Convert currency
      tags:
      - currency
  /api/dashboards/count:
    get:
      consumes:
      - application/json
      description: Count dashboard
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.DashboardResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Count dashboard
      tags:
      - dashboard
  /api/orders:
    get:
      consumes:
      - application/json
      description: Get order
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: created_at
        type: string
      - in: query
        name: created_by
        type: string
      - in: query
        name: customer_id
        type: string
      - description: join
        in: query
        name: customer_name
        type: string
      - in: query
        name: customer_phone
        type: string
      - in: query
        name: final_price
        type: number
      - in: query
        name: id
        type: string
      - in: query
        name: is_read
        type: boolean
      - in: query
        name: modified_at
        type: string
      - in: query
        name: modified_by
        type: string
      - in: query
        name: notes
        type: string
      - in: query
        name: payment_status
        type: string
      - description: fk
        in: query
        name: pic_id
        type: string
      - in: query
        name: pic_name
        type: string
      - in: query
        name: price
        type: number
      - in: query
        name: shipment_number
        type: string
      - in: query
        name: shipment_price
        type: integer
      - in: query
        name: shipment_type
        type: string
      - in: query
        name: status
        type: string
      - in: query
        name: stock_status
        type: string
      - in: query
        name: supplier_id
        type: string
      - in: query
        name: supplier_name
        type: string
      - in: query
        name: trx_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderViewResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get order
      tags:
      - order
    put:
      consumes:
      - application/json
      description: Upsert order
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpsertOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderUpsertResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Upsert order
      tags:
      - order
  /api/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get order by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderViewResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get order by id
      tags:
      - order
  /api/orders/{id}/detail:
    get:
      consumes:
      - application/json
      description: Get order detail by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderViewDetailResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get order detail by id
      tags:
      - order
  /api/packets:
    get:
      consumes:
      - application/json
      description: Get packet
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      - description: fk
        in: query
        name: unit_id
        type: string
      - in: query
        name: value
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PacketResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get packet
      tags:
      - packet
    post:
      consumes:
      - application/json
      description: Create packet
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreatePacketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PacketResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create packet
      tags:
      - packet
  /api/packets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete packet
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PacketResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete packet
      tags:
      - packet
    get:
      consumes:
      - application/json
      description: Get packet by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PacketResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get packet by id
      tags:
      - packet
    put:
      consumes:
      - application/json
      description: Update packet
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdatePacketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PacketResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update packet
      tags:
      - packet
  /api/products:
    get:
      consumes:
      - application/json
      description: Get product
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - description: fk
        in: query
        name: brand_id
        type: string
      - description: join
        in: query
        name: brand_name
        type: string
      - in: query
        name: code
        type: string
      - in: query
        name: created_at
        type: string
      - in: query
        name: created_by
        type: string
      - in: query
        name: id
        type: string
      - in: query
        name: modified_at
        type: string
      - in: query
        name: modified_by
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: packet_id
        type: string
      - in: query
        name: packet_value
        type: integer
      - in: query
        name: price_final
        type: number
      - in: query
        name: price_usd
        type: number
      - in: query
        name: supplier_name
        type: string
      - in: query
        name: unit_name
        type: string
      - in: query
        name: variant_id
        type: string
      - in: query
        name: variant_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get product
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create product
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create product
      tags:
      - product
  /api/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete product
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete product
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get product by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get product by id
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Update product
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ProductResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update product
      tags:
      - product
  /api/racks:
    get:
      consumes:
      - application/json
      description: Get rack
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RackResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get rack
      tags:
      - rack
    post:
      consumes:
      - application/json
      description: Create rack
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RackResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create rack
      tags:
      - rack
  /api/racks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete rack
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RackResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete rack
      tags:
      - rack
    get:
      consumes:
      - application/json
      description: Get rack by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RackResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get rack by id
      tags:
      - rack
    put:
      consumes:
      - application/json
      description: Update rack
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RackResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update rack
      tags:
      - rack
  /api/reminder-stock-histories:
    get:
      consumes:
      - application/json
      description: Get reminderStockHistory
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: body
        type: string
      - in: query
        name: is_read
        type: boolean
      - in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get reminderStockHistory
      tags:
      - reminderStockHistory
  /api/reminder-stock-histories/{id}:
    delete:
      consumes:
      - application/json
      description: Delete reminderStockHistory
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete reminderStockHistory
      tags:
      - reminderStockHistory
    get:
      consumes:
      - application/json
      description: Get reminderStockHistory by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get reminderStockHistory by id
      tags:
      - reminderStockHistory
    put:
      consumes:
      - application/json
      description: Update reminderStockHistory
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReminderStockHistoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update reminderStockHistory
      tags:
      - reminderStockHistory
  /api/reminder-stock-histories/bulk-read:
    put:
      consumes:
      - application/json
      description: Update bulk read reminderStockHistory
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReminderStockHistoryBulkReadRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryBulkReadResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update bulk read reminderStockHistory
      tags:
      - reminderStockHistory
  /api/reminder-stock-histories/count-unread:
    get:
      consumes:
      - application/json
      description: Get count unread reminderStockHistory
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockHistoryCountUnreadResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get count unread reminderStockHistory
      tags:
      - reminderStockHistory
  /api/reminder-stocks:
    post:
      consumes:
      - application/json
      description: Create reminderStock
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateReminderStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create reminderStock
      tags:
      - reminderStock
  /api/reminder-stocks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete reminderStock
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete reminderStock
      tags:
      - reminderStock
    get:
      consumes:
      - application/json
      description: Get reminderStock by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get reminderStock by id
      tags:
      - reminderStock
    put:
      consumes:
      - application/json
      description: Update reminderStock
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateReminderStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update reminderStock
      tags:
      - reminderStock
  /api/reminder_stocks:
    get:
      consumes:
      - application/json
      description: Get reminderStock
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: min_stock
        type: integer
      - in: query
        name: name
        type: string
      - in: query
        name: reminder_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReminderStockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get reminderStock
      tags:
      - reminderStock
  /api/reports/order-products:
    get:
      consumes:
      - application/json
      description: Get report order products
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: end_date
        type: string
      - in: query
        name: group
        type: string
      - in: query
        name: start_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderProductReportResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get report order products
      tags:
      - report
  /api/reports/order-products/excel:
    get:
      consumes:
      - application/json
      description: Get report order product excel
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: end_date
        type: string
      - in: query
        name: group
        type: string
      - in: query
        name: start_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderProductReportResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get report order product excel
      tags:
      - report
  /api/reports/orders:
    get:
      consumes:
      - application/json
      description: Get report orders
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: end_date
        type: string
      - in: query
        name: start_date
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderReportResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get report orders
      tags:
      - report
  /api/reports/orders/excel:
    get:
      consumes:
      - application/json
      description: Get report order excel
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: end_date
        type: string
      - in: query
        name: start_date
        type: string
      - in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderReportResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get report order excel
      tags:
      - report
  /api/roles:
    get:
      consumes:
      - application/json
      description: Get role
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get role
      tags:
      - role
    post:
      consumes:
      - application/json
      description: Create role
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create role
      tags:
      - role
  /api/roles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete role
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete role
      tags:
      - role
    get:
      consumes:
      - application/json
      description: Get role by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get role by id
      tags:
      - role
    put:
      consumes:
      - application/json
      description: Update role
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateRoleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.RoleResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update role
      tags:
      - role
  /api/stock-lookups:
    get:
      consumes:
      - application/json
      description: Get stockLookup
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: created_at
        type: string
      - in: query
        name: created_by
        type: string
      - in: query
        name: id
        type: string
      - in: query
        name: is_seal
        type: boolean
      - in: query
        name: modified_at
        type: string
      - in: query
        name: modified_by
        type: string
      - description: join
        in: query
        name: product_id
        type: string
      - in: query
        name: rack_id
        type: string
      - in: query
        name: remaining_value
        type: number
      - in: query
        name: remaining_value_before
        type: number
      - description: fk
        in: query
        name: stock_rack_id
        type: string
      - in: query
        name: value
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockLookupViewResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get stockLookup
      tags:
      - stockLookup
    post:
      consumes:
      - application/json
      description: Create stockLookup
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateStockLookupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockLookupResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create stockLookup
      tags:
      - stockLookup
  /api/stock-lookups/{id}:
    delete:
      consumes:
      - application/json
      description: Delete stockLookup
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockLookupResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete stockLookup
      tags:
      - stockLookup
    get:
      consumes:
      - application/json
      description: Get stockLookup by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockLookupResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get stockLookup by id
      tags:
      - stockLookup
    put:
      consumes:
      - application/json
      description: Update stockLookup
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateStockLookupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockLookupResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update stockLookup
      tags:
      - stockLookup
  /api/stocks:
    get:
      consumes:
      - application/json
      description: Get stock
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: brand_id
        type: string
      - in: query
        name: brand_name
        type: string
      - in: query
        name: created_at
        type: string
      - in: query
        name: created_by
        type: string
      - in: query
        name: id
        type: string
      - in: query
        name: modified_at
        type: string
      - in: query
        name: modified_by
        type: string
      - in: query
        name: packet_id
        type: string
      - in: query
        name: packet_value
        type: integer
      - in: query
        name: price_final
        type: integer
      - in: query
        name: price_usd
        type: integer
      - description: join
        in: query
        name: product_code
        type: string
      - description: fk
        in: query
        name: product_id
        type: string
      - in: query
        name: product_name
        type: string
      - in: query
        name: supplier_name
        type: string
      - in: query
        name: total
        type: integer
      - in: query
        name: unit_name
        type: string
      - in: query
        name: variant_id
        type: string
      - in: query
        name: variant_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get stock
      tags:
      - stock
  /api/stocks/{id}:
    get:
      consumes:
      - application/json
      description: Get stock by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get stock by id
      tags:
      - stock
  /api/stocks/convertion:
    put:
      consumes:
      - application/json
      description: Convertion stock
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.ConvertionStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockConvertionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Convertion stock
      tags:
      - stock
  /api/stocks/history:
    get:
      consumes:
      - application/json
      description: Get stock history
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: created_at
        type: string
      - in: query
        name: created_by
        type: string
      - in: query
        name: id
        type: string
      - in: query
        name: modified_at
        type: string
      - in: query
        name: modified_by
        type: string
      - in: query
        name: order_trx_id
        type: string
      - in: query
        name: trx_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get stock history
      tags:
      - stock history
  /api/stocks/movement:
    put:
      consumes:
      - application/json
      description: Movement stock
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.MovementStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockMovementResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Movement stock
      tags:
      - stock
  /api/stocks/transaction:
    put:
      consumes:
      - application/json
      description: Transaction stock
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.TransactionStockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.StockTransactionResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Transaction stock
      tags:
      - stock
  /api/units:
    get:
      consumes:
      - application/json
      description: Get unit
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: code
        type: string
      - in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get unit
      tags:
      - unit
    post:
      consumes:
      - application/json
      description: Create unit
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create unit
      tags:
      - unit
  /api/units/{id}:
    delete:
      consumes:
      - application/json
      description: Delete unit
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete unit
      tags:
      - unit
    get:
      consumes:
      - application/json
      description: Get unit by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get unit by id
      tags:
      - unit
    put:
      consumes:
      - application/json
      description: Update unit
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUnitRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UnitResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update unit
      tags:
      - unit
  /api/users:
    get:
      consumes:
      - application/json
      description: Get user
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - in: query
        name: email
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: password
        type: string
      - description: fk
        in: query
        name: role_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create user
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create user
      tags:
      - user
  /api/users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get user by id
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - user
  /api/variants:
    get:
      consumes:
      - application/json
      description: Get variant
      parameters:
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: search
        type: string
      - example:
        - asc_column
        - -dsc_column
        in: query
        items:
          type: string
        name: sort_by
        type: array
      - description: fk
        in: query
        name: brand_id
        type: string
      - in: query
        name: code
        type: string
      - in: query
        name: itl
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: unique_code
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.VariantResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get variant
      tags:
      - variant
    post:
      consumes:
      - application/json
      description: Create variant
      parameters:
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateVariantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.VariantResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Create variant
      tags:
      - variant
  /api/variants/{id}:
    delete:
      consumes:
      - application/json
      description: Delete variant
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.VariantResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Delete variant
      tags:
      - variant
    get:
      consumes:
      - application/json
      description: Get variant by id
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.VariantResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Get variant by id
      tags:
      - variant
    put:
      consumes:
      - application/json
      description: Update variant
      parameters:
      - description: id path
        in: path
        name: id
        required: true
        type: string
      - description: request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateVariantRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.VariantResponseDoc'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.errorResponse'
      security:
      - BearerAuth: []
      summary: Update variant
      tags:
      - variant
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
